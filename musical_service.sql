CREATE TABLE IF NOT EXISTS Genre (
	GenreID SERIAL PRIMARY KEY,
	name VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Artist (
	ArtistID SERIAL PRIMARY KEY,
	name VARCHAR(100) NOT NULL UNIQUE,
	GenreID INT REFERENCES Genre(GenreID)
);

CREATE TABLE IF NOT EXISTS Album (
	AlbumID SERIAL PRIMARY KEY,
	name VARCHAR(100) NOT NULL UNIQUE,
	year INT NOT NULL,
	ArtistID INT NOT NULL REFERENCES Artist(ArtistID)
);

CREATE TABLE IF NOT EXISTS Track (
	TrackID SERIAL PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
		CHECK (LENGTH(TRIM(name)) >= 1),
    length INTEGER
        CHECK (length IS NULL OR (length BETWEEN 1 AND 7200)),
	AlbumID INT NOT NULL REFERENCES Album(AlbumID)
);

CREATE TABLE IF NOT EXISTS Collection (
	CollectionID SERIAL PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	year INTEGER NOT NULL
        CHECK (year BETWEEN 1950 AND EXTRACT(YEAR FROM CURRENT_DATE) + 1)
);
 
CREATE TABLE IF NOT EXISTS CollectionTrack (
	CollectionID SERIAL PRIMARY KEY,
	TrackID INT REFERENCES Track(TrackID),
	PRIMARY KEY (CollectionID, TrackID)
);

CREATE TABLE IF NOT EXISTS GenreArtist (
    GenreID INT REFERENCES Genre(GenreID),
    ArtistID INT REFERENCES Artist(ArtistID),
    PRIMARY KEY (GenreID, ArtistID)
);

CREATE TABLE IF NOT EXISTS ArtistAlbum (
    ArtistID INT REFERENCES Artist(ArtistID),
    AlbumID INT REFERENCES Album(AlbumID),
    PRIMARY KEY (ArtistID, AlbumID)
);